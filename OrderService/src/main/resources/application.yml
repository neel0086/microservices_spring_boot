server:
  port: 8082


spring:
  application:
    name: ORDER-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/microservices2_order
    username: root
    password: neel
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  eureka:
    instance:
      prefer-ip-address: true
    client:
      fetch-registry: true
      register-with-eureka: true
      service-url:
        defaultZone: http://localhost:8761/eureka

  management:
    health:
      circuitbreakers:
        enabled: true
    endpoints:
      web:
        exposure:
          include: health
    endpoint:
      health:
        show-details: always

  resilience4j:
    circuitbreaker:
      instances:
        OrderBreaker:
          registerHealthIndicator: true
          eventConsumerBufferSize: 10
          failureRateThreshold: 50
          minimumNumberOfCalls: 5
          automaticTransitionFromOpenToHalfOpenEnabled: true
          waitDurationInOpenState: 6s
          permittedNumberOfCallsInHalfOpenState: 3
          slidingWindowSize: 10
          slidingWindowType: COUNT_BASED
    retry:
      instances:
        OrderBreaker:
          max-attempts: 3
          wait-durations: 5s
    rateLimiter:
      instances:
        userRateLimiter:
          limit-refresh-period: 4s
          limit-for-period: 2
          timeout-duration: 0s
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.service.order.OrderService.event.OrderPlacedEvent
